generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type QuestionsAnswers {
  id        String   @map("_id") @db.ObjectId
  content   String
  createdAt DateTime           @db.Date
  ownerId   String             @db.ObjectId
  updatedAt DateTime           @db.Date
}

type UsersSocials {
  github UsersSocialsGithub
}

type UsersSocialsGithub {
  handle  String
  picture String
}

model Question {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  answers   QuestionsAnswers[]
  content   String
  createdAt DateTime           @db.Date
  ownerId   String             @db.ObjectId
  owner     User              @relation(fields: [ownerId], references: [id])
  private   Boolean
  status    String
  title     String
  updatedAt DateTime           @db.Date
}

model Account {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.String
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  username      String
  accounts      Account[]
  sessions      Session[]
  questions     Question[]
  roles         String[]  @default(["user"])

  @@map("users")
}

model VerificationToken {
  identifier String   @id @map("_id") @db.ObjectId
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
